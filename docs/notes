DISPERSY:

FIXME: MySwiftProcess causes the logs to go haywire. Temporary fix for now is to import this class earlier.

No routing stuff has been introduced for IPv6 in Swift, but addresses can be bound. IPv6 is mostly good on my end.
Dispersy itself is still a problem though. (Starts with the inet_aton in conversion for introduction_request)

DispersyContacts need to be there for each endpoint, and the multiendpoint, but overall they have a peer in common. Fix this. 

WALKER:

you should still be able to use the associated Member to determine that multiple Candidate instances belong to a single device
perhaps you should override the 'who to introduce' method, to take into account your multi-interface thing (this code should also ensure you don't introduce A(interface1) to A(interface2)
or you will introduce a device to one of its other interfaces, so you may want to filter out those introductions (to prevent a device to talk to itself)

How can we use the multifile capabilities to our benefit?

LIBSWIFT:

Set LD_LIBRARY_PATH for swift to work

AddPeer in content.cpp can either add a peer to a single socket, or to all sockets

If both eth and wlan are available, a UDP socket will switch between both, depending on the destination address, each sendto.
Perhaps it is good to choose a single interface for each socket. This will create problems with NAT traversal.
http://stackoverflow.com/questions/12371385/how-to-specify-which-interface-to-use-for-a-socket-in-linux

ROUTING:

http://kindlund.wordpress.com/2007/11/19/configuring-multiple-default-routes-in-linux/

GENERAL:

Tests are necessary to see if multiple channels really perform better. And if improvements can be made.

TESTING:

How to drop packets in Linux..
http://sandilands.info/sgordon/dropping-packets-in-ubuntu-linux-using-tc-and-iptables

ethtool - get all the network interface card parameters (status of the link, speed, offload parameters...)